     1                  ;********* Ustawienie TIMERów i bindy *********
     2        0097      LED EQU P1.7
     3                  
     4                  ;TIMER 0
     5        0000      T0_G EQU 0 ;GATE
     6        0000      T0_C EQU 0 ;COUNTER/-TIMER
     7        0001      T0_M EQU 1 ;MODE (0..3)
     8        0001      TIM0 EQU T0_M+T0_C*4+T0_G*8
     9                  
    10                  ;TIMER 1
    11        0000      T1_G EQU 0 ;GATE
    12        0000      T1_C EQU 0 ;COUNTER/-TIMER
    13        0000      T1_M EQU 0 ;MODE (0..3)
    14        0000      TIM1 EQU T1_M+T1_C*4+T1_G*8
    15                  
    16        0001      TMOD_SET EQU TIM0+TIM1*16
    17                  
    18                  ;50[ms] = 50 000[ŠS]*(11.0592[MHz]/12) =
    19                  ; = 46 080 cykli = 180 * 256
    20        004C      TH0_SET EQU 256-180
    21        0000      TL0_SET EQU 0
    22                  
    23        0000      TH1_SET EQU 0
    24        0000      TL1_SET EQU 0
    25                  ;***********************************************
    26                  
    27  0000: 02 01 00      LJMP START
    28  0100:               ORG 100H
    29  0100:           START:
    30  0100: 12 01 6C      LCALL WPROWADZ_CZAS
    31                  
    32  0103: 75 89 01      MOV TMOD,#TMOD_SET ;Timer 0 liczy czas
    33  0106: 75 8C 4C      MOV TH0,#TH0_SET ;Timer 0 na 50ms
    34  0109: 75 8A 00      MOV TL0,#TL0_SET
    35  010C: D2 8C         SETB TR0 ;start Timera
    36  010E:           LOOP:                ;Pętla mrugania diody TEST
    37  010E: 12 01 49      LCALL USTAW_LCD
    38  0111: 12 01 2C      LCALL SPRWADZ_SEC
    39  0114: 12 01 36      LCALL SPRWADZ_MIN
    40  0117: 12 01 40      LCALL SPRWADZ_GODZ
    41  011A: B2 97         CPL LED
    42  011C: 7F 14         MOV R7,#20       ;odczekaj czas 20*50ms=1s
    43  011E:           TIME_N50:
    44  011E: 30 8D FD      JNB TF0,$        ;czekaj, aż Timer 0
    45                                       ;odliczy 50ms
    46  0121: 75 8C 4C      MOV TH0,#TH0_SET ;TH0 na 50ms
    47  0124: C2 8D         CLR TF0          ;zerowanie flagi timera 0
    48  0126: DF F6         DJNZ R7,TIME_N50 ;odczekanie N*50ms
    49  0128: 0A            INC R2
    50  0129: 80 E3         SJMP LOOP
    51  012B: 00            NOP
    52  012C:           SPRWADZ_SEC:
    53  012C: EA            MOV A, R2
    54  012D: C3            CLR C
    55  012E: 94 3B         SUBB A, #59
    56  0130: 40 03         JC WYJDZ
    57  0132: 7A 00         MOV R2, #0
    58  0134: 09            INC R1
    59  0135:           WYJDZ:
    60  0135: 22            RET
    61  0136:           SPRWADZ_MIN:
    62  0136: E9            MOV A, R1
    63  0137: C3            CLR C
    64  0138: 94 3C         SUBB A, #60
    65  013A: 40 03         JC WYJDZ2
    66  013C: 79 00         MOV R1, #0
    67  013E: 08            INC R0
    68  013F:           WYJDZ2:
    69  013F: 22            RET
    70  0140:           SPRWADZ_GODZ:
    71  0140: E8            MOV A, R0
    72  0141: C3            CLR C
    73  0142: 94 18         SUBB A, #24
    74  0144: 40 02         JC WYJDZ3
    75  0146: 78 00         MOV R0, #0
    76  0148:           WYJDZ3:
    77  0148: 22            RET
    78                  
    79  0149:           USTAW_LCD:
    80  0149: 12 81 0C      LCALL LCD_CLR
    81  014C: E8            MOV A,R0
    82  014D: 12 01 B7      LCALL BCD
    83  0150: 12 81 04      LCALL WRITE_HEX
    84  0153: 74 3A         MOV A,#':'
    85  0155: 12 81 02      LCALL WRITE_DATA
    86  0158: E9            MOV A,R1
    87  0159: 12 01 B7      LCALL BCD
    88  015C: 12 81 04      LCALL WRITE_HEX
    89  015F: 74 3A         MOV A,#':'
    90  0161: 12 81 02      LCALL WRITE_DATA
    91  0164: EA            MOV A,R2
    92  0165: 12 01 B7      LCALL BCD
    93  0168: 12 81 04      LCALL WRITE_HEX
    94  016B: 22            RET
    95  016C:           WPROWADZ_CZAS:
    96  016C: 12 81 0C      LCALL LCD_CLR 
    97  016F: 12 01 AA      LCALL WPROWADZ
    98  0172: F8            MOV R0, A
    99  0173: C3            CLR C
   100  0174: 94 19         SUBB A, #25
   101  0176: 50 F4         JNC WPROWADZ_CZAS
   102  0178: E8            MOV A, R0
   103  0179: 12 01 B7      LCALL BCD
   104  017C: 12 81 04      LCALL WRITE_HEX
   105  017F: 74 3A         MOV A,#':'
   106  0181: 12 81 02      LCALL WRITE_DATA
   107  0184:           WPROWADZ_MINUTY:
   108  0184: 12 01 AA      LCALL WPROWADZ
   109  0187: F9            MOV R1, A
   110  0188: C3            CLR C
   111  0189: 94 3D         SUBB A, #61
   112  018B: 50 F7         JNC WPROWADZ_MINUTY
   113  018D: E9            MOV A, R1
   114  018E: 12 01 B7      LCALL BCD
   115  0191: 12 81 04      LCALL WRITE_HEX
   116  0194: 74 3A         MOV A,#':'
   117  0196: 12 81 02      LCALL WRITE_DATA
   118  0199:           WPROWADZ_SEC:
   119  0199: 12 01 AA      LCALL WPROWADZ
   120  019C: FA            MOV R2, A
   121  019D: C3            CLR C
   122  019E: 94 3D         SUBB A, #61
   123  01A0: 50 E2         JNC WPROWADZ_MINUTY
   124  01A2: EA            MOV A, R2
   125  01A3: 12 01 B7      LCALL BCD
   126  01A6: 12 81 04      LCALL WRITE_HEX
   127  01A9: 22            RET
   128  01AA:           WPROWADZ:
   129  01AA: 12 81 1C      LCALL WAIT_KEY ; Wczytaj liczbę dziesiątek
   130  01AD: 75 F0 0A      MOV B,#10 ; pomnóż
   131  01B0: A4            MUL AB ; przez 10
   132  01B1: FD            MOV R5,A ; zapisz liczbę w R1
   133  01B2: 12 81 1C      LCALL WAIT_KEY ;wczytaj liczbę jedności
   134  01B5: 2D            ADD A,R5 ; dodaj liczbę jedności do R1
   135  01B6: 22            RET ; wyjdź z podprogramu. Wynik w A.
   136  01B7:           BCD:
   137  01B7: 75 F0 0A      MOV B,#10
   138  01BA: 84            DIV AB
   139  01BB: C4            SWAP A
   140  01BC: 25 F0         ADD A,B
   141  01BE: 22            RET
   142  01BF:           CHUJ_DO_EMULACJI:
   143  01BF: 75 F0 0A      MOV B,#10
   144  01C2: 84            DIV AB
   145  01C3: C4            SWAP A
   146  01C4: 25 F0         ADD A,B
   147  01C6: 22            RET
   148                  
